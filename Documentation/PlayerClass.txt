Player class:

Default constructor:
    Initializes the number of ships and ship counter to 0, and all the pointers to nullptr.

Constructor with int size parameter:
    Initializes the number of ships to the size, the Ship array to an array of Ship pointers of the given size,
    creates new instances of the public and private board, and initializes the Ship counter to 0.

Deconstructor:
    Deletes every Ship object in the array, then the whole array and the two boards.

bool startValid(int row, int col);
    Checks if the given row and column are valid for the first position of a Ship.

bool pathValid(int startRow, int startCol, int endRow, int endCol, int size);
    Checks if the path from the starting row and column to the ending row and column is valid to place a Ship of the size parameter.
    If it is valid, a new Ship object is created at the correct position in the array, and placeShip() is called.

void placeShip(Ship *someShip);
    Places the Ship parameter on the player's private board, and increments the Ship counter.

void printPrivateBoard();
    Prints the player's private board appropriately.

string *markPrivate(string strike, int row, int col, int hitship, bool isHit);
    This function checks if the attack location was a hit or not. If it was a hit, it will mark an "H", and if it was
    a miss, it will mark it as a miss "M". If it was sunk, it will run the sinkShip function passing in the id of the ship (hitship),
    which marks the entire ship as an X indicating it has been sunk. Then, it returns the position array of this ship so that it can 
    be marked on the other players board.

void markPublic(string strike, int row, int col);
    This function will mark the public board with either an "H" or "M" at row and col depending on
    if there was a ship at that location.

void markPublicSunk(string *posArr, int size);
    This function goes through the entire position array of the ship which stores a number and a capital letter. 
    It converts the number and letter into an integer value and marks the player's public board with an X at that location.

void sinkShip(int hitShip);
    This function goes through the entire position array of the ship that has been hit and converts the number and letter combination
    into integers like markPublicSunk, and sets all locations with an X.

